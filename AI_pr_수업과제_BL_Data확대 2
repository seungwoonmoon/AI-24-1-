{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO+YkUXJ7ZYqU1r+By5fETq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"1PuOFRX2xx83"},"outputs":[],"source":["# Data 확대 + Split 조정--> 0.3 + 단위조정\n","# Data 불러오기\n","\n","import pandas as pd\n","import numpy as np\n","from sklearn.utils import resample"]},{"cell_type":"code","source":["original = pd.read_csv('price.csv')\n"],"metadata":{"id":"yen3T3f9ywd3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["original.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"U-AnxJTbzdGM","executionInfo":{"status":"ok","timestamp":1716949648408,"user_tz":-540,"elapsed":5,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"fce2e1c5-5ed2-49a0-b8ac-52fc04b5920e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       년월  평균기온  최저기온  최고기온    강수량  서리일수  결빙일수  우박일수      가격\n","0  Jan.96  -2.4  -7.9   3.6   21.9  15.0  27.0   0.0  15,143\n","1  Feb.96  -1.4  -7.6   5.7    1.6  17.0  27.0   0.0  15,228\n","2  Mar.96   4.3  -1.1  10.1  116.5  10.0  21.0   0.0  16,267\n","3  Apr.96  10.6   3.5  17.6   28.0   2.0   7.0   0.0  14,063\n","4  May.96  17.6  10.8  25.0   57.3   0.0   0.0   0.0  14,000"],"text/html":["\n","  <div id=\"df-842d5547-27b6-48e5-b317-f66e6e4df5bf\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>년월</th>\n","      <th>평균기온</th>\n","      <th>최저기온</th>\n","      <th>최고기온</th>\n","      <th>강수량</th>\n","      <th>서리일수</th>\n","      <th>결빙일수</th>\n","      <th>우박일수</th>\n","      <th>가격</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Jan.96</td>\n","      <td>-2.4</td>\n","      <td>-7.9</td>\n","      <td>3.6</td>\n","      <td>21.9</td>\n","      <td>15.0</td>\n","      <td>27.0</td>\n","      <td>0.0</td>\n","      <td>15,143</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Feb.96</td>\n","      <td>-1.4</td>\n","      <td>-7.6</td>\n","      <td>5.7</td>\n","      <td>1.6</td>\n","      <td>17.0</td>\n","      <td>27.0</td>\n","      <td>0.0</td>\n","      <td>15,228</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mar.96</td>\n","      <td>4.3</td>\n","      <td>-1.1</td>\n","      <td>10.1</td>\n","      <td>116.5</td>\n","      <td>10.0</td>\n","      <td>21.0</td>\n","      <td>0.0</td>\n","      <td>16,267</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Apr.96</td>\n","      <td>10.6</td>\n","      <td>3.5</td>\n","      <td>17.6</td>\n","      <td>28.0</td>\n","      <td>2.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>14,063</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>May.96</td>\n","      <td>17.6</td>\n","      <td>10.8</td>\n","      <td>25.0</td>\n","      <td>57.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>14,000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-842d5547-27b6-48e5-b317-f66e6e4df5bf')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-842d5547-27b6-48e5-b317-f66e6e4df5bf button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-842d5547-27b6-48e5-b317-f66e6e4df5bf');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-079ec681-7a9c-45a6-8ec6-a169b8b6fe69\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-079ec681-7a9c-45a6-8ec6-a169b8b6fe69')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-079ec681-7a9c-45a6-8ec6-a169b8b6fe69 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"original","summary":"{\n  \"name\": \"original\",\n  \"rows\": 340,\n  \"fields\": [\n    {\n      \"column\": \"\\ub144\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 340,\n        \"samples\": [\n          \"Sep.19\",\n          \"Sep.05\",\n          \"Jun.05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3c9\\uade0\\uae30\\uc628\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.524232475704173,\n        \"min\": -5.5,\n        \"max\": 27.5,\n        \"num_unique_values\": 195,\n        \"samples\": [\n          -1.2,\n          17.4,\n          7.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uc800\\uae30\\uc628\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.013493633382513,\n        \"min\": -11.5,\n        \"max\": 23.6,\n        \"num_unique_values\": 196,\n        \"samples\": [\n          17.3,\n          -3.4,\n          11.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uace0\\uae30\\uc628\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.286408619187107,\n        \"min\": 0.4,\n        \"max\": 33.4,\n        \"num_unique_values\": 196,\n        \"samples\": [\n          4.9,\n          24.9,\n          23.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac15\\uc218\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99.12125238990225,\n        \"min\": 0.0,\n        \"max\": 558.7,\n        \"num_unique_values\": 306,\n        \"samples\": [\n          58.4,\n          474.3,\n          227.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc11c\\ub9ac\\uc77c\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.369558032950634,\n        \"min\": 0.0,\n        \"max\": 30.0,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          30.0,\n          24.0,\n          21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacb0\\ube59\\uc77c\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.837418944464243,\n        \"min\": 0.0,\n        \"max\": 31.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          18.0,\n          3.0,\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc6b0\\ubc15\\uc77c\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2770037449004419,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          3.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac00\\uaca9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 279,\n        \"samples\": [\n          \"43,077\",\n          \"50,476\",\n          \"35,947\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["original.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A6JKZ0YozmQd","executionInfo":{"status":"ok","timestamp":1716949650737,"user_tz":-540,"elapsed":4,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"9b54546f-22ef-44df-824f-f5714cc913e6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 340 entries, 0 to 339\n","Data columns (total 9 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   년월      340 non-null    object \n"," 1   평균기온    340 non-null    float64\n"," 2   최저기온    340 non-null    float64\n"," 3   최고기온    340 non-null    float64\n"," 4   강수량     340 non-null    float64\n"," 5   서리일수    339 non-null    float64\n"," 6   결빙일수    339 non-null    float64\n"," 7   우박일수    339 non-null    float64\n"," 8   가격      340 non-null    object \n","dtypes: float64(7), object(2)\n","memory usage: 24.0+ KB\n"]}]},{"cell_type":"code","source":["# Data 전처리\n","#1. replace('-', np.nan)을 사용하여 '-'를 NaN으로 변환합니다.\n","#2. str.replace(',', '')를 사용하여 쉼표를 제거합니다.\n","\n","original['가격'] = original['가격'].replace(\"-\", np.nan)\n","original['가격'] = original['가격'].str.replace(\",\", \"\")\n","original.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"EpNblCqb2-O3","executionInfo":{"status":"ok","timestamp":1716949654893,"user_tz":-540,"elapsed":341,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"26601e4b-d3a5-4e91-86dc-b58137b8e9cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       년월  평균기온  최저기온  최고기온    강수량  서리일수  결빙일수  우박일수     가격\n","0  Jan.96  -2.4  -7.9   3.6   21.9  15.0  27.0   0.0  15143\n","1  Feb.96  -1.4  -7.6   5.7    1.6  17.0  27.0   0.0  15228\n","2  Mar.96   4.3  -1.1  10.1  116.5  10.0  21.0   0.0  16267\n","3  Apr.96  10.6   3.5  17.6   28.0   2.0   7.0   0.0  14063\n","4  May.96  17.6  10.8  25.0   57.3   0.0   0.0   0.0  14000"],"text/html":["\n","  <div id=\"df-16f47ffd-872a-45b6-9c6c-a160e603649b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>년월</th>\n","      <th>평균기온</th>\n","      <th>최저기온</th>\n","      <th>최고기온</th>\n","      <th>강수량</th>\n","      <th>서리일수</th>\n","      <th>결빙일수</th>\n","      <th>우박일수</th>\n","      <th>가격</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Jan.96</td>\n","      <td>-2.4</td>\n","      <td>-7.9</td>\n","      <td>3.6</td>\n","      <td>21.9</td>\n","      <td>15.0</td>\n","      <td>27.0</td>\n","      <td>0.0</td>\n","      <td>15143</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Feb.96</td>\n","      <td>-1.4</td>\n","      <td>-7.6</td>\n","      <td>5.7</td>\n","      <td>1.6</td>\n","      <td>17.0</td>\n","      <td>27.0</td>\n","      <td>0.0</td>\n","      <td>15228</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Mar.96</td>\n","      <td>4.3</td>\n","      <td>-1.1</td>\n","      <td>10.1</td>\n","      <td>116.5</td>\n","      <td>10.0</td>\n","      <td>21.0</td>\n","      <td>0.0</td>\n","      <td>16267</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Apr.96</td>\n","      <td>10.6</td>\n","      <td>3.5</td>\n","      <td>17.6</td>\n","      <td>28.0</td>\n","      <td>2.0</td>\n","      <td>7.0</td>\n","      <td>0.0</td>\n","      <td>14063</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>May.96</td>\n","      <td>17.6</td>\n","      <td>10.8</td>\n","      <td>25.0</td>\n","      <td>57.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>14000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16f47ffd-872a-45b6-9c6c-a160e603649b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-16f47ffd-872a-45b6-9c6c-a160e603649b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-16f47ffd-872a-45b6-9c6c-a160e603649b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c4da8768-b886-4c4b-ac7a-0b3471f2193f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c4da8768-b886-4c4b-ac7a-0b3471f2193f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c4da8768-b886-4c4b-ac7a-0b3471f2193f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"original","summary":"{\n  \"name\": \"original\",\n  \"rows\": 340,\n  \"fields\": [\n    {\n      \"column\": \"\\ub144\\uc6d4\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 340,\n        \"samples\": [\n          \"Sep.19\",\n          \"Sep.05\",\n          \"Jun.05\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ud3c9\\uade0\\uae30\\uc628\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.524232475704173,\n        \"min\": -5.5,\n        \"max\": 27.5,\n        \"num_unique_values\": 195,\n        \"samples\": [\n          -1.2,\n          17.4,\n          7.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uc800\\uae30\\uc628\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.013493633382513,\n        \"min\": -11.5,\n        \"max\": 23.6,\n        \"num_unique_values\": 196,\n        \"samples\": [\n          17.3,\n          -3.4,\n          11.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\ucd5c\\uace0\\uae30\\uc628\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.286408619187107,\n        \"min\": 0.4,\n        \"max\": 33.4,\n        \"num_unique_values\": 196,\n        \"samples\": [\n          4.9,\n          24.9,\n          23.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac15\\uc218\\ub7c9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 99.12125238990225,\n        \"min\": 0.0,\n        \"max\": 558.7,\n        \"num_unique_values\": 306,\n        \"samples\": [\n          58.4,\n          474.3,\n          227.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc11c\\ub9ac\\uc77c\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.369558032950634,\n        \"min\": 0.0,\n        \"max\": 30.0,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          30.0,\n          24.0,\n          21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uacb0\\ube59\\uc77c\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11.837418944464243,\n        \"min\": 0.0,\n        \"max\": 31.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          18.0,\n          3.0,\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uc6b0\\ubc15\\uc77c\\uc218\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2770037449004419,\n        \"min\": 0.0,\n        \"max\": 3.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          3.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\uac00\\uaca9\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 278,\n        \"samples\": [\n          \"41739\",\n          \"43600\",\n          \"35857\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# Data 전처리\n","#2. 가격 Data type 변경.   df['거래금액'] = df['거래금액'].astype('int64')\n","\n","# pd.to_numeric(df['가격'], errors='coerce')를 사용하여 문자열을 숫자로 변환합니다. 변환할 수 없는 값은 NaN으로 설정됩니다.\n","# fillna(0)을 사용하여 NaN 값을 0으로 대체합니다.\n","# astype('int64')를 사용하여 '가격' 열을 int64 타입으로 변환합니다.\n","\n","\n","pd.to_numeric(original['가격'], errors = 'coerce')\n","original['가격'] = original['가격'].astype('float64')\n","original.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y1I498FQzqYs","executionInfo":{"status":"ok","timestamp":1716949656148,"user_tz":-540,"elapsed":2,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"b16fd794-a5e4-4d56-b085-df784e49cd14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["년월       0\n","평균기온     0\n","최저기온     0\n","최고기온     0\n","강수량      0\n","서리일수     1\n","결빙일수     1\n","우박일수     1\n","가격      21\n","dtype: int64"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# Data 전처리\n","#3. 결측치 Data 처리 (ffill로 처리 예정) df = df.fillna(method='ffill')\n","\n","original = original.fillna(method='ffill')\n","\n","# drop 사용할 것\n","\n","original.isnull().sum()"],"metadata":{"id":"f0v0doxg0neo","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716949660318,"user_tz":-540,"elapsed":386,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"a0fa6c3e-c859-491e-fde3-8d00ab59d539"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["년월      0\n","평균기온    0\n","최저기온    0\n","최고기온    0\n","강수량     0\n","서리일수    0\n","결빙일수    0\n","우박일수    0\n","가격      0\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["from sklearn.utils import resample\n","df = resample(original, n_samples=3330, replace=True, random_state=42)"],"metadata":{"id":"F29G0LlEoAwK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Data 전처리\n","from sklearn.model_selection import train_test_split\n","\n","# 특징(features)와 타겟(target) 변수 분리\n","# 예를 들어, 'feature1', 'feature2', 'feature3'가 특징 변수이고 'target'이 타겟 변수라고 가정합니다.\n","X = df[['평균기온', '최저기온', '최고기온', '강수량', '서리일수', '결빙일수',  '우박일수']]  # 독립 변수 (특징)\n","y = df['가격']  # 종속 변수 (타겟)\n","\n","# 3. 데이터셋 분할\n","# train_test_split 함수를 사용하여 데이터를 훈련 데이터셋과 테스트 데이터셋으로 나눕니다.\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=True, random_state=42)\n","\n","# 결과 확인\n","print(f'훈련 데이터셋 크기: {X_train.shape[0]}')\n","print(f'테스트 데이터셋 크기: {X_test.shape[0]}')\n"],"metadata":{"id":"qtshtkNmzt3S","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716949663434,"user_tz":-540,"elapsed":390,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"cb7fcea7-c0a8-4aa3-e3c1-d8081534e208"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["훈련 데이터셋 크기: 2664\n","테스트 데이터셋 크기: 666\n"]}]},{"cell_type":"code","source":["# trainID 삭제, testID 값만 옮겨둠\n","# X_train = X_train.drop('ID', axis=1)\n","# X_test_id = X_test.pop('ID')\n","# X_train.head()"],"metadata":{"id":"ouNskB82_k0B"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 모델평가\n","\n","import numpy as np\n","from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error\n","def rmse(y_test, y_pred): #RMSE\n","    return np.sqrt(mean_squared_error(y_test, y_pred))\n","\n","def rmsle(y_test, y_pred): #RMSLE\n","    return np.sqrt(np.mean(np.power(np.log1p(y_test) - np.log1p(y_pred), 2)))\n","\n","def mape(y_test, y_pred): #MAPE\n","    return np.mean(np.abs((y_test - y_pred) / y_test)) * 100"],"metadata":{"id":"capz8eBN_q9_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 선형회귀\n","from sklearn.linear_model import LinearRegression\n","\n","lm = LinearRegression()\n","lm.fit(X_train,y_train)\n","pred=lm.predict(X_test)\n","print(\"r2: \",r2_score(y_test, pred))\n","print(\"mae: \",mean_absolute_error(y_test, pred))\n","print(\"mse: \",mean_squared_error(y_test, pred))\n","print(\"rmse: \",rmse(y_test, pred))\n","print(\"rmsle: \",rmsle(y_test, pred))\n","print(\"mape: \",mape(y_test, pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"X6fX7Ne1y9DH","executionInfo":{"status":"ok","timestamp":1716949680997,"user_tz":-540,"elapsed":442,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"b864341e-0bbc-491c-b6df-47ccf4853c4c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.09973809729469052\n","mae:  11810.079076905336\n","mse:  255795140.4819797\n","rmse:  15993.59685880508\n","rmsle:  0.38930069444316906\n","mape:  34.13348541970306\n"]}]},{"cell_type":"code","source":["# 릿지\n","from sklearn.linear_model import Ridge\n","\n","ri = Ridge()\n","ri.fit(X_train,y_train)\n","pred=ri.predict(X_test)\n","print(\"r2: \",r2_score(y_test, pred))\n","print(\"mae: \",mean_absolute_error(y_test, pred))\n","print(\"mse: \",mean_squared_error(y_test, pred))\n","print(\"rmse: \",rmse(y_test, pred))\n","print(\"rmsle: \",rmsle(y_test, pred))\n","print(\"mape: \",mape(y_test, pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"E1Y0aRtnzCJQ","executionInfo":{"status":"ok","timestamp":1716949699326,"user_tz":-540,"elapsed":370,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"267ea705-5e77-42e2-c58b-340f212104b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.09955616364195374\n","mae:  11810.108754587716\n","mse:  255846834.04373142\n","rmse:  15995.212847715764\n","rmsle:  0.38937014672276665\n","mape:  34.13909917097929\n"]}]},{"cell_type":"code","source":["# 라쏘\n","from sklearn.linear_model import Lasso\n","\n","ls = Lasso()\n","ls.fit(X_train,y_train)\n","pred=ls.predict(X_test)\n","print(\"r2: \",r2_score(y_test, pred))\n","print(\"mae: \",mean_absolute_error(y_test, pred))\n","print(\"mse: \",mean_squared_error(y_test, pred))\n","print(\"rmse: \",rmse(y_test, pred))\n","print(\"rmsle: \",rmsle(y_test, pred))\n","print(\"mape: \",mape(y_test, pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_nu-R4l-zfFw","executionInfo":{"status":"ok","timestamp":1716949713772,"user_tz":-540,"elapsed":403,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"fa069181-2258-4052-ca8d-b73cd3212d4f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.09223624742706593\n","mae:  11810.666657946722\n","mse:  257926672.13404375\n","rmse:  16060.095645233367\n","rmsle:  0.39202104461886983\n","mape:  34.31153792077994\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.421e+11, tolerance: 7.382e+07\n","  model = cd_fast.enet_coordinate_descent(\n"]}]},{"cell_type":"code","source":["#랜덤포레스트\n","from sklearn.ensemble import RandomForestRegressor\n","\n","rf = RandomForestRegressor()\n","rf.fit(X_train,y_train)\n","pred = rf.predict(X_test)\n","print(\"r2: \",r2_score(y_test, pred))\n","print(\"mae: \",mean_absolute_error(y_test, pred))\n","print(\"mse: \",mean_squared_error(y_test, pred))\n","print(\"rmse: \",rmse(y_test, pred))\n","print(\"rmsle: \",rmsle(y_test, pred))\n","print(\"mape: \",mape(y_test, pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1-RMZ8_tzpZx","executionInfo":{"status":"ok","timestamp":1716949735579,"user_tz":-540,"elapsed":2886,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"adae424a-603c-4f34-db7a-31a48d0af25f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.999177476296807\n","mae:  105.6677777777778\n","mse:  233707.06410630632\n","rmse:  483.4325848619498\n","rmsle:  0.016270915769967285\n","mape:  0.3192240027424618\n"]}]},{"cell_type":"code","source":["# xgb\n","from xgboost import XGBRegressor\n","\n","xg = XGBRegressor()\n","xg.fit(X_train,y_train)\n","pred = xg.predict(X_test)\n","print(\"r2: \",r2_score(y_test, pred))\n","print(\"mae: \",mean_absolute_error(y_test, pred))\n","print(\"mse: \",mean_squared_error(y_test, pred))\n","print(\"rmse: \",rmse(y_test, pred))\n","print(\"rmsle: \",rmsle(y_test, pred))\n","print(\"mape: \",mape(y_test, pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M1XwJuKjz0ho","executionInfo":{"status":"ok","timestamp":1716949743376,"user_tz":-540,"elapsed":729,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"3d9fcfe0-bdcd-444c-dd7a-c51be95e672d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["r2:  0.9997543380764072\n","mae:  178.71674995307808\n","mse:  69800.93911300694\n","rmse:  264.1986735640566\n","rmsle:  0.008179573372065712\n","mape:  0.5151198617716403\n"]}]},{"cell_type":"code","source":["pred = xg.predict(X_test)\n","pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kKA6oOGu0Foz","executionInfo":{"status":"ok","timestamp":1716949763227,"user_tz":-540,"elapsed":289,"user":{"displayName":"지월목박","userId":"12487091273519342892"}},"outputId":"7023c576-a6d3-4569-cef8-e3340012de11"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 60439.656,  43386.84 ,  49444.184,  35829.586,  43259.715,\n","        35194.086,  65153.707,  44811.773,  44725.664,  20604.152,\n","        38364.13 ,  18538.95 ,  18343.59 ,  16303.515,  60234.78 ,\n","        17604.29 ,  60439.656,  15273.156,  66690.67 ,  38894.547,\n","        35829.586,  22075.465,  24643.938,  24831.62 ,  59308.58 ,\n","        45726.863,  61763.72 ,  38894.547,  64826.38 ,  20830.1  ,\n","        38892.844,  35091.676,  41938.03 ,  53273.684,  40083.258,\n","        38210.22 ,  72836.72 ,  20604.152,  32705.197,  22726.64 ,\n","        44527.027,  35818.086,  46246.36 ,  17580.287,  24385.494,\n","        39852.64 ,  25658.36 ,  59242.062,  35091.676,  44409.312,\n","        41334.316,  44416.992,  41334.316,  35829.586,  50180.492,\n","        53029.79 ,  40688.53 ,  43414.992,  24158.17 ,  41104.85 ,\n","        43247.074,  35830.645,  44196.926,  28677.633,  25610.809,\n","        42334.195,  21491.691,  23282.76 ,  52764.305,  58138.57 ,\n","        42998.03 ,  43268.168,  25267.81 ,  20347.188,  22227.951,\n","        29990.977,  71896.95 ,  38847.77 ,  43252.625,  34752.258,\n","        40020.92 ,  38894.547,  38847.77 ,  37032.668,  40019.234,\n","        39870.652,  35636.79 ,  35194.086,  41970.324,  38210.22 ,\n","        17854.777,  39860.805,  22227.951,  48270.477,  67981.76 ,\n","        15273.156,  40023.18 ,  35194.086,  44102.438,  44725.664,\n","        39852.64 ,  43386.84 ,  59056.37 ,  79737.52 ,  26818.445,\n","        64826.38 ,  37176.273,  41310.832,  72836.72 ,  38894.547,\n","        31684.809,  14464.365,  39924.957,  60439.656,  34429.527,\n","        42100.17 ,  42334.195,  55881.145,  79737.52 ,  41970.324,\n","        42211.023,  45530.285,  23282.76 ,  39773.457,  27795.572,\n","        45626.06 ,  22450.146,  97488.305,  41104.85 ,  31507.006,\n","        37061.395,  40019.234,  30203.504,  54513.5  ,  66690.67 ,\n","        38684.887,  79665.18 ,  30924.924,  30274.592,  24243.068,\n","        39257.125,  30868.56 ,  14182.301,  37882.754,  41252.73 ,\n","        35636.79 ,  17580.287,  59056.37 ,  39976.04 ,  64857.57 ,\n","        44196.926,  41807.363,  24831.62 ,  18063.445,  29990.977,\n","        56491.434,  45460.24 ,  49690.82 ,  28214.87 ,  35091.676,\n","        39773.457,  39860.805,  32282.621,  35364.203,  67576.766,\n","        67981.76 ,  42862.95 ,  19778.139,  43247.074, 103340.695,\n","        26730.555,  58190.305,  57043.71 ,  79806.34 ,  34719.742,\n","        52650.62 ,  53029.79 ,  42245.652,  24643.938,  58734.633,\n","        62961.73 ,  25064.988,  32552.86 ,  34713.574,  29855.098,\n","        99789.5  ,  37109.234,  44107.12 , 112684.47 ,  25650.064,\n","        68513.44 ,  39451.3  ,  50044.074,  24243.068,  17854.777,\n","        51744.92 ,  18538.95 ,  79737.52 ,  48796.734,  20654.787,\n","        43259.715,  25650.064,  35818.086,  26638.693,  21469.64 ,\n","        51594.74 ,  17341.559,  62961.73 ,  64857.57 ,  35073.727,\n","        38127.504,  32323.87 ,  35636.79 ,  71896.95 ,  61763.72 ,\n","        42249.69 ,  22075.465,  34532.133,  54513.5  ,  56491.434,\n","        25650.064,  17854.777,  22450.146,  34713.574,  17580.287,\n","        42585.367,  89076.42 ,  65288.035,  14182.301,  24243.068,\n","        45088.25 ,  27729.207,  68513.44 ,  26818.445,  30924.924,\n","        77899.836,  72127.16 ,  91497.1  ,  67576.766,  34719.742,\n","        97488.305,  27729.207, 103340.695,  27745.607,  44732.824,\n","        56661.19 ,  23123.213,  39976.04 ,  23123.213,  23531.59 ,\n","        44121.754,  38739.707,  45536.83 ,  29990.977,  24243.068,\n","        40019.234,  64167.152,  41334.316,  34713.574,  26818.445,\n","        40080.67 ,  51351.77 ,  32552.86 ,  41104.85 ,  42704.195,\n","        21812.38 ,  53273.684,  42998.03 ,  67576.766,  66690.67 ,\n","        22227.951,  43290.76 ,  30203.504,  79806.34 ,  22075.465,\n","        33882.965,  55881.145,  27729.207,  55930.504,  21421.746,\n","        19539.451,  39451.3  ,  41982.71 ,  34752.258,  35829.586,\n","        53273.684,  14182.301,  24502.94 ,  17341.559,  72127.16 ,\n","        44196.926,  45626.06 ,  45088.25 ,  44732.824,  39978.7  ,\n","        35829.586,  38892.844,  35636.79 ,  42460.2  ,  35091.676,\n","        39852.64 ,  45530.285,  32467.697,  38739.707,  45626.06 ,\n","        30811.062,  42585.367,  39257.125,  43259.715,  41368.52 ,\n","        39770.71 ,  35818.086,  35194.086,  34429.527,  44416.992,\n","        39924.957,  51594.74 ,  38113.25 ,  51744.92 ,  68054.516,\n","        35401.75 ,  53407.418,  17421.613,  26031.617,  16594.012,\n","        35830.645,  24385.494,  32467.697,  41982.71 ,  42211.023,\n","        32604.625,  53029.79 ,  36081.84 ,  30460.215,  19241.79 ,\n","        58138.57 ,  32321.87 ,  42585.367,  38684.887,  27795.572,\n","        17854.777,  34706.566,  40019.234,  38127.504,  71896.95 ,\n","        21381.762,  51594.74 ,  23102.564,  27745.607,  40003.16 ,\n","        35905.6  ,  31684.809,  37032.668,  98094.81 ,  19778.139,\n","        44416.992,  38156.88 ,  19353.96 ,  33882.965,  43378.47 ,\n","        34118.35 ,  41471.49 ,  48428.02 ,  30924.924,  39257.125,\n","        43268.168,  53188.3  ,  50049.414,  32321.87 ,  34719.742,\n","        42100.17 ,  43812.168,  25650.064,  41471.49 ,  38739.707,\n","        51816.16 ,  21381.762,  53407.418,  59402.668,  38116.83 ,\n","        32618.81 ,  53188.3  ,  38894.547,  19778.139,  39924.957,\n","        35822.7  ,  42001.387,  35651.49 ,  17925.465,  54513.5  ,\n","        39870.652,  37061.395,  43414.992,  21590.531,  44107.12 ,\n","        32323.87 ,  40080.67 ,  60042.51 ,  36551.652,  45371.19 ,\n","        75348.766,  53407.418,  79665.18 ,  56491.434,  45088.25 ,\n","        45530.285,  37109.234,  19539.451,  20654.787,  40023.18 ,\n","        34648.965,  59835.75 ,  44184.656,  56491.434,  35818.086,\n","        32552.86 ,  59242.062,  32705.197,  36081.84 ,  77899.836,\n","        56491.434,  89076.42 ,  40020.92 ,  38041.137,  49444.184,\n","        43259.715,  35451.773,  81668.12 ,  25650.064,  15273.156,\n","        44409.312,  17854.777,  42334.195,  39576.785,  41334.316,\n","        29990.977,  51351.77 ,  20830.1  ,  43812.168,  44671.45 ,\n","        41980.   ,  26638.693,  39516.23 ,  50217.895,  36081.84 ,\n","        43247.074,  43414.992,  47285.26 ,  14464.365,  52650.62 ,\n","        60042.51 ,  34794.594,  43259.715,  79806.34 ,  44725.664,\n","        38210.22 ,  39576.785,  65288.035,  36081.84 ,  25650.064,\n","        26638.693,  53407.418,  45915.766,  14464.365,  68054.516,\n","        37882.754,  64826.38 ,  37032.668,  61308.7  ,  45915.766,\n","        59242.062,  20869.287,  60234.78 ,  68513.44 ,  32323.87 ,\n","        34429.527,  17734.39 ,  38892.844,  44811.773,  44671.45 ,\n","        43268.168,  43378.47 ,  45726.863,  21896.559,  32467.697,\n","        34794.594,  36081.84 ,  35073.727,  43378.47 ,  38894.547,\n","        25457.943,  56661.19 ,  53273.684,  38113.25 ,  21590.531,\n","        37032.668,  20347.188,  25610.809,  30466.207,  61763.72 ,\n","        21590.531,  71896.95 ,  38210.22 ,  50217.895,  24241.36 ,\n","        45460.24 ,  22450.146,  39773.457,  17580.287,  38364.13 ,\n","        39870.652,  24502.94 ,  25650.064,  32604.625,  44671.45 ,\n","        24831.62 ,  41104.85 ,  41334.316,  68054.516,  28498.104,\n","        15273.156,  39096.227,  71896.95 ,  52764.305,  41982.71 ,\n","        33319.188,  53185.25 ,  38364.13 ,  38894.547,  66690.67 ,\n","        41368.52 ,  65153.707,  26031.617,  44671.45 ,  43696.848,\n","        20654.787,  36237.523,  56555.438,  18343.59 ,  44026.08 ,\n","        67981.76 ,  34713.574,  22450.146,  34118.35 ,  32323.87 ,\n","        25267.81 ,  45536.83 ,  39723.83 ,  38441.535,  39245.51 ,\n","        30091.633,  33882.965,  43247.074,  38433.633,  53273.684,\n","        61308.7  ,  35830.645,  42704.195,  45726.863,  41972.56 ,\n","        49444.184,  68513.44 ,  30868.56 ,  38441.535,  20347.188,\n","        44416.992,  42460.2  ,  39976.04 ,  41252.73 ,  45536.83 ,\n","        37061.395,  40027.523,  21812.38 ,  32705.197,  35818.086,\n","        64779.3  ,  66556.88 ,  39516.23 ,  15313.217,  45626.06 ,\n","        81668.12 ,  41334.316,  17734.39 ,  43386.84 ,  40083.258,\n","        68513.44 ,  17580.287,  56555.438,  26031.617,  31688.143,\n","        36237.523,  27795.572,  59800.305,  40023.18 ,  39257.125,\n","        56491.434,  37176.273,  42460.2  ,  41471.49 ,  65470.82 ,\n","        34794.594,  14182.301,  34794.594,  26818.445,  56555.438,\n","        44671.45 ,  20869.287,  34429.527,  47055.688,  45371.19 ,\n","        17341.559,  42704.195,  51351.77 ,  53188.3  , 112684.47 ,\n","        39723.83 ,  31688.143,  48796.734,  64167.152, 103340.695,\n","        45088.25 ,  39870.652,  24831.62 ,  19778.139,  23531.59 ,\n","        16495.84 ,  43414.992,  47055.688,  43247.074,  61308.7  ,\n","        21812.38 ,  38810.254,  24831.62 ,  37882.754,  20604.152,\n","        35401.75 ,  44715.32 ,  38156.88 ,  35636.79 ,  18538.95 ,\n","        19778.139,  44416.992,  26897.092,  44671.45 ,  43345.484,\n","        52806.67 ,  15273.156,  60042.51 ,  20347.188,  61308.7  ,\n","        97274.6  ,  65470.82 ,  38113.25 ,  35651.49 ,  20031.477,\n","        38210.22 ,  38364.13 ,  53188.3  ,  22450.146,  13104.128,\n","        68054.516,  20604.152,  56555.438,  30868.56 ,  31684.809,\n","       103340.695], dtype=float32)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":[],"metadata":{"id":"4lRk-dSPqL3T"},"execution_count":null,"outputs":[]}]}